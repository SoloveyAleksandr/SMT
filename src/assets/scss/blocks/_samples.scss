@import "../vars";

.samples {
  margin-bottom: 20rem;
  position: relative;

  @include breakpoint($jb-bp) {
    margin-bottom: 8rem;
  }

  &-container {
    padding: 10rem 0;

    @include breakpoint($cos-bp) {
      padding: 5rem 0rem;
    }

    @include breakpoint($xl-bp) {
      padding: 0;
    }

    @include breakpoint($jb-bp) {
      display: flex;
      flex-direction: column;
    }
  }

  &-btn {
    position: relative;
    z-index: 2;

    @include breakpoint($jb-bp) {
      display: none;
    }
  }

  &-info {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 64rem;

    @include breakpoint($xl-bp) {
      width: 45rem;
    }

    @include breakpoint($jb-bp) {
      width: 100%;
    }

    &__subtitle {
      color: $grey;
      font-weight: $font-reg;
      margin-bottom: 2rem;

      @include breakpoint($xl-bp) {
        font-size: 1.4rem;
      }
    }

    &__title {
      font-size: 5.2rem;
      margin-bottom: 8.6rem;

      @include breakpoint($cos-bp) {
        margin-bottom: 4rem;
      }

      @include breakpoint($xl-bp) {
        font-size: 2.4rem;
      }
    }
  }

  &-list {
    display: flex;
    flex-direction: column;
    margin-bottom: 8.6rem;
    width: 100%;

    @include breakpoint($cos-bp) {
      margin-bottom: 4rem;
    }

    & li:last-child {
      border-bottom: 0.1rem solid $grey;
    }

    & li:last-child._active {
      border-bottom: 0.1rem solid transparent;
    }

    &__item {
      width: 100%;
      padding: 2rem 0;
      font-size: 2.4rem;
      font-weight: $font-light;
      border-top: 0.1rem solid $grey;
      background-color: $white;
      border-radius: 0rem;
      transition: 0.3s;
      display: flex;
      align-items: center;
      justify-content: space-between;

      @include breakpoint($xl-bp) {
        font-size: 1.8rem;
        padding: 1rem 0;
      }

      @include breakpoint($jb-bp) {
        font-size: 1.4rem;
      }

      &-icon {
        width: 6rem;
        height: 3rem;
        opacity: 0;
        transition: 0.3s;

        @include breakpoint($xl-bp) {
          width: 3rem;
        }

        @include breakpoint($jb-bp) {
          width: 2rem;
        }
      }

      &._active {
        padding: 3rem;
        font-weight: $font-reg;
        border-top: 0.1rem solid transparent;
        background-color: #f6f6f6;
        border-radius: 1rem;

        .samples-list__item-icon {
          opacity: 1;
        }

        @include breakpoint($xl-bp) {
          padding: 1rem 2rem;
        }

        @include breakpoint($jb-bp) {
          background-color: $green;
          color: $white;

          .samples-list__item-icon {
            fill: $white;
            transform: rotate(90deg);
          }
        }
      }

      &._next {
        border-top: 0.1rem solid transparent;
      }
    }
  }

  &-swiper {
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    width: 50vw;
    overflow: hidden;

    @include breakpoint($jb-bp) {
      position: static;
      height: 35rem;
      width: calc(100% + 5rem);
      margin: 0 -2.5rem;
    }

    &-progress {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1000;
      height: 4px;
      background-color: rgba(255, 45, 45, 0.6);
    }

    &__slide {
      height: 100%;
    }

    &-img {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;

      &__image {
        object-fit: cover;
        height: 100%;
        width: 100%;
      }
    }
  }
}
// const samplesTL = gsap.timeline({
//   defaults: {
//     ease: "none"
//   },
//   scrollTrigger: {
//     trigger: ".samples-container",
//     start: "top 100px",
//     // end: "+=2000px",
//     scrub: true,
//     pin: true
//   },
//   onUpdate: () => {
//     handleChangeSlides();
//   }
// });

// samplesTL.to('.samples-swiper-progress', 0.1, { width: 100 + '%' });

// const samplesHandler = handleSamplesSlide();

// function handleChangeSlides() {
//   const progress = Number(samplesTL.progress().toFixed(3));

//   samplesHandler(progress);
// }

// function handleSamplesSlide() {
//   const step = Number((1 / [...samplesSwiperPagination.children].length).toFixed(3));
//   let prevValue = 0;
//   return (value) => {
//     if (value >= prevValue + step) {
//       prevValue = prevValue + step;
//       samplesSwiper.slideNext();
//       return;
//     } else if (value <= prevValue) {
//       prevValue = prevValue - step;
//       samplesSwiper.slidePrev();
//     }
//   }
// }